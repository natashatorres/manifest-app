// PSEUDO CODE
// - wire framing —> 
// how I want the app to look, 

plant your seeds - a manifestation forum application


// what I want it to do / how users will interact
allow users to sign up and create an account/log-in
allow users to go to a user page add a profile image
allow user to add manifestations to forum
  


// properties to send to post method
what herbs the user clicks on 


// - run server 
// - create new collection in MongoDB --> change collection names in code (db.collection('<collectionName>'))
// - check connection to my server 

// - set up front end (inputs, where I want things to be positioned (affects childnodes))

//routes
// - GET —> how many pages in my app? how many collections? 
//--> herb list: rename res.render('index.ejs', {<collectionName>: result})
//--> confirmation page 

// - POST —> form inside of index.ejs -> what inputs / request body information do I want to send to the database? 
name 
order

// - PUT —> fetch call through main.js | what am I updating? what identifiers will I use to find that specific document?
// --> send idenitifier information inside of fetch body. every property inside of JSON body request = req.body.<property> in server.js
the customers order

// - DELETE —> fetch call through main.js | what identifiers will I use to find that specific document?

//Adding new properties to user (i.e. name, image, etc)
1. app/models/user.js
2. add new properties in there
3. figure out what the data types (num, strings, arrays, etc)
4. then go into passport and add i.e.newUser.local.email = email;
5. then image will be availble to insert onto the page 

//article https://www.geeksforgeeks.org/upload-and-retrieve-image-on-mongodb-using-mongoose/

//how to add photos

//npm install multer --save

//variables to add
  const multer = require('multer');

  const storage = multer.diskStorage({
    destination: (req, file, cb) => {
      cb(null, 'uploads')
    },
    filename: (req, file, cb) => {
      cb(null, file.fieldname + '-' + Date.now())
    }
  });
  const fs = require('fs');
  const path = require('path');
  const upload = multer({ storage: storage });
  const userSchema = require('./models/user')


  //add to ejs

     <form action="/imageUpload" method="POST" enctype="multipart/form-data">
              <% if(user.img.data){ %>
                <img src="data:image/<%=user.img.contentType%>;base64,
                <%=user.img.data.toString('base64')%>" class="profileImg">
              <% } %>
                  
            <div>
              <input type="file" id="image" name="image" value="" required>
            </div>
                  <button type="submit">UPLOAD</button>
            </form>

//post method to add to database

  app.post('/imageUpload', upload.single('image'), (req, res, next) => {
    console.log('starting image upload')
    var obj = {
      name: req.body.name,
      desc: req.body.desc,
      img: {
        data: fs.readFileSync(path.join(__dirname + '/../uploads/' + req.file.filename)),
        contentType: 'image/png'
      }
    }
    console.log(obj)
    userSchema.findOneAndUpdate({
      _id: req.user._id,
    },
      obj, (err, item) => {
      if (err) {
          console.log(err);
      }
      else {
          console.log('Saved image to database')
          res.redirect('/profile');
      }
  });
 
